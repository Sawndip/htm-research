0. Implement Region and SensorRegion classes
1. Implement HTM CLA structures: synapse, dendrite, cell, column, region
2. Implement generic spatial pooler class
3. Implement "Augmented Spatial Pooler"
4. Implement SPHelper class
5. Implement performance metrics: average lifetime/population sparseness, entropy, stability

***************************************************************************************************

Notes:
- Synaptic input is defined by DataSource class (sensor input or region input)
- Spatial pooler can learn or infer
- SPHelper class is used to encode the whole image via encode or cudaEncode function

***************************************************************************************************

Region (abstract class)
- getInput(size_t i, size_t j, size_t k) : double - get input given location in the region

SensorRegion : Region (sensor input)
- setInput(Mat m) - for raw image input
- setInput(Mat m[2]) - for processed image input, e.g. after whitening and local contrast normalization

HTMRegion : Region (generic HTM input)